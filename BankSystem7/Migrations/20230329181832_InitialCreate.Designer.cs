// <auto-generated />
using System;
using BankSystem7.AppContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankSystem7.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230329181832_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.2.23128.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BankSystem7.Models.Bank", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AccountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("BankSystem7.Models.BankAccount", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.Property<decimal>("BankAccountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("BankID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("BankID");

                    b.HasIndex("UserID");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("BankSystem7.Models.Card", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("BankAccountID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BankID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CVV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CardKind")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("BankAccountID")
                        .IsUnique()
                        .HasFilter("[BankAccountID] IS NOT NULL");

                    b.HasIndex("UserID")
                        .IsUnique()
                        .HasFilter("[UserID] IS NOT NULL");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("BankSystem7.Models.Credit", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BankID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CreditAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserBankAccountID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("BankID");

                    b.HasIndex("UserID")
                        .IsUnique()
                        .HasFilter("[UserID] IS NOT NULL");

                    b.ToTable("Credits");
                });

            modelBuilder.Entity("BankSystem7.Models.User", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<Guid?>("BankID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BankSystem7.Models.BankAccount", b =>
                {
                    b.HasOne("BankSystem7.Models.Bank", "Bank")
                        .WithMany("BankAccounts")
                        .HasForeignKey("BankID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BankSystem7.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Bank");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BankSystem7.Models.Card", b =>
                {
                    b.HasOne("BankSystem7.Models.BankAccount", "BankAccount")
                        .WithOne("Card")
                        .HasForeignKey("BankSystem7.Models.Card", "BankAccountID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BankSystem7.Models.User", "User")
                        .WithOne("Card")
                        .HasForeignKey("BankSystem7.Models.Card", "UserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("BankAccount");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BankSystem7.Models.Credit", b =>
                {
                    b.HasOne("BankSystem7.Models.Bank", "Bank")
                        .WithMany("Credits")
                        .HasForeignKey("BankID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BankSystem7.Models.User", "User")
                        .WithOne("Credit")
                        .HasForeignKey("BankSystem7.Models.Credit", "UserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Bank");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BankSystem7.Models.Bank", b =>
                {
                    b.Navigation("BankAccounts");

                    b.Navigation("Credits");
                });

            modelBuilder.Entity("BankSystem7.Models.BankAccount", b =>
                {
                    b.Navigation("Card");
                });

            modelBuilder.Entity("BankSystem7.Models.User", b =>
                {
                    b.Navigation("Card");

                    b.Navigation("Credit");
                });
#pragma warning restore 612, 618
        }
    }
}
